openapi: 3.0.0
info:
  title: chat realtime api
  version: 1.0.0
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: users
  - name: auth
  - name: chats
  - name: messages
paths:
  /api/users:
    get:
      tags:
        - users
      summary: find all users
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/{userId}:
    get:
      tags:
        - users
      summary: find user by id
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/create:
    post:
      tags:
        - users
      summary: create user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Felippe Santana
                email: felippefsantana02@gmail.com
                password: pass@123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/update/{userId}:
    patch:
      tags:
        - users
      summary: update user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Felippe Santana
                email: felippefsantana02@gmail.com
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users/delete/{userId}:
    delete:
      tags:
        - users
      summary: New Request
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/auth/login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: felippefsantana02@gmail.com
                password: pass@123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/chats:
    get:
      tags:
        - chats
      summary: find user chats
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/chats/{chatId}:
    get:
      tags:
        - chats
      summary: find chat
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/chats/create:
    post:
      tags:
        - chats
      summary: create chat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: ''
                slug: ''
                members:
                  - 4697e432-7ddf-4b63-abf9-165371ddab7c
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/messages/{chatId}:
    get:
      tags:
        - messages
      summary: find messages
      security:
        - bearerAuth: []
      parameters:
        - name: chatId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/messages/create:
    post:
      tags:
        - messages
      summary: create message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 90a9a1c2-1a29-4d3a-8f37-60862bf3a2e4
                content: teste 123
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
